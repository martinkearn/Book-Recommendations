@model BookRecommendations.ViewModels.HomeSkuViewModel

@{
    ViewData["Title"] = Model.Sku.Title;
}

<div class="jumbotron">
    <h1>@ViewData["Title"] <small>@Model.Sku.Id</small></h1>
    @*<p>Author <strong>@Model.Sku.Author</strong>. Published with <strong>@Model.Sku.Publisher</strong> in <strong>@Model.Sku.Year</strong></p>*@
    <p>@Model.Sku.Description</p>
    <p>@Model.Sku.Price.ToString("c")</p>
    <a asp-action="index" class="btn btn-default">See all skus</a> <a asp-controller="Cart" asp-action="Add" asp-route-id="@Model.Sku.Id" class="btn btn-primary">Add to cart</a>
</div>



<h2>Item-to-item Recomendations</h2>
@if (Model.ITIItems.recommendedItems.Count() == 0)
{
    <p>There are no 'Item-to-item' recommendations for this sku</p>
}
else
{
    @foreach (var recommendedItem in Model.ITIItems.recommendedItems)
    {
        <p><a asp-action="Sku" asp-controller="Home" asp-route-id="@recommendedItem.items.FirstOrDefault().id"><strong>@recommendedItem.items.FirstOrDefault().name</strong></a> with a rating of '@Math.Round(recommendedItem.rating, 3)' because @recommendedItem.reasoning.FirstOrDefault()</p>
    }
}

<h2>Frequently Bought Together</h2>
@if (Model.FBTItems.recommendedItems.Count() == 0)
{
    <p>There are no 'Frequently Bought Together' recommendations for this sku</p>
}
else
{
    @foreach (var recommendedItem in Model.FBTItems.recommendedItems)
    {
        <p><a asp-action="Sku" asp-controller="Home" asp-route-id="@recommendedItem.items.FirstOrDefault().id"><strong>@recommendedItem.items.FirstOrDefault().name</strong></a> with a rating of '@Math.Round(recommendedItem.rating, 3)' because @recommendedItem.reasoning.FirstOrDefault()</p>
    }
}
