@model CartIndexViewModel

@{
    ViewData["Title"] = "Cart";
}

<div class="jumbotron">
    <h1>@ViewData["Title"]</h1>
    <p>Cart data is stored in session state so will be discarded when the browser is closed.</p>
</div>

<table class="table table-striped">
    <thead>
        <tr>
            <td>Item</td>
            <td>Quantity</td>
            <td>Unit Price</td>
            <td>Total Price</td>
            <td>Remove</td>
        </tr>
    </thead>
    @foreach (var cartItem in Model.Cart.CartItems)
    {
        <tr>
            <td><a asp-action="CatalogItem" asp-controller="Home" asp-route-id="@cartItem.CatalogItem.Id">@cartItem.CatalogItem.Title</a></td>
            <td>@cartItem.Quantity</td>
            <td>@cartItem.CatalogItem.Sell.ToString("c")</td>
            <td>@((cartItem.CatalogItem.Sell * cartItem.Quantity).ToString("c"))</td>
            <td><a asp-action="Remove" asp-controller="Cart" asp-route-id="@cartItem.CatalogItem.Id" class="btn btn-default btn-xs">Remove</a></td>
        </tr>
    }
    @if (Model.Cart.CartItems.Count <= 0)
    {
        <tr>
            <td colspan="5">Cart is empty</td>
        </tr>
    }
    <tfoot>
        <tr>
            <td></td>
            <td><strong>@Model.Cart.TotalQuantity</strong></td>
            <td></td>
            <td><strong>@Model.Cart.TotalPrice.ToString("c")</strong></td>
            <td></td>
        </tr>
    </tfoot>
</table>

<h2>Recomendations <small>Based on the cart contents</small></h2>

@Html.Partial("_CatalogItems", new CatalogItemPartialViewModel() { CatalogItems = Model.Recommendations.ToList(), MaxVisible = 4, ItemGridClass = "col-md-3" })




